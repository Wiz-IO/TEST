import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, LSTM
from datetime import datetime, timedelta

# атмосферно налягане
hpa = [1014.78326, 1007.12067, 1004.7415, 1010.2583, 1005.80835, 1009.9709, 1015.25836, 1022.56244, 1026.0709, 1026.9584, 1029.3583, 1031.8917, 1027.1543, 1015.29584, 1010.7292, 1011.73755, 995.0291, 998.94586, 1022.96265, 1031.3002, 1031.3667, 1024.3002, 1032.3792, 1030.9667, 1031.3749, 1031.5668, 1036.5542, 1032.9, 1031.8584, 1033.4916, 1034.5624, 1033.2167, 1035.1083, 1033.0582, 1031.6167, 1028.2042, 1023.53326, 1013.67505, 1003.80005, 993.17505, 987.53754, 997.63763, 1008.5876, 1021.31256, 1023.94995, 1019.41675, 1019.7166, 1031.4332, 1032.2626, 1030.7792, 1031.0209, 1021.2625, 1001.63336, 1000.07916, 1005.04584, 1003.8166, 999.94586, 1011.2417, 1020.7126, 1014.27094, 1008.2832, 1003.4502, 999.45416, 1011.4417, 1016.45416, 1022.2334, 1019.09576, 1009.77496, 1000.4792, 995.97906, 1007.57086, 1018.95013, 1019.28754, 1015.85834, 1016.11255, 1022.04565, 1022.42914, 1017.79175, 1019.375, 1019.45, 1023.77496, 1019.3125, 1014.73334, 1013.6707, 1005.8208, 992.49585, 990.7083, 995.8125, 997.8501, 998.34174, 997.4917, 1002.27496, 1014.26245, 1012.66656, 1016.0459, 1016.1082, 1016.4041, 1016.00836, 1009.59174, 1017.9124, 1029.9169, 1033.4292, 1032.5625, 1027.2792, 1021.05835, 1012.7583, 1012.7375, 1012.8457, 1018.5833, 1018.3584, 1021.02905, 1021.0376, 1020.4292, 1017.1209, 1013.31683, 1009.9082, 1007.62085, 1007.32074, 1014.73334, 1019.97076, 1013.8042, 1003.32495, 1003.64996, 1015.6001, 1014.3208, 1011.5708, 1011.16675, 1016.80835, 1023.64996, 1023.6792, 1020.5623, 1018.4583, 1015.50415, 1012.4043, 1006.33746, 1006.69586, 1006.74585, 1009.729, 1012.37494, 1012.27924, 1009.2168, 1008.94586, 1013.2083, 1017.3166, 1018.59174, 1018.0374, 1018.10004, 1018.8792, 1020.59576, 1015.2542, 1008.28326, 1012.1958, 1016.9749, 1018.7959, 1018.5666, 1014.79596, 1014.4917, 1016.6167, 1017.5418, 1013.13336, 1008.67505, 1009.93744, 1016.30835, 1018.12103, 1017.4167, 1012.3875, 1011.14996, 1011.96674, 1014.925, 1013.24164, 1014.6082, 1017.4583, 1015.42926, 1017.22504, 1018.4167, 1015.6333, 1011.68335, 1011.20844, 1012.05414, 1016.0166, 1010.94574, 1012.63763, 1016.4749, 1017.25, 1013.19165, 1013.2708, 1013.74567, 1009.60406, 1015.54175, 1016.85004, 1014.9375, 1017.50836, 1016.94995, 1012.40826, 1014.46246, 1014.29175, 1012.1375, 1016.625, 1020.7458, 1020.17084, 1017.47485, 1010.59576, 1010.55, 1018.39575, 1020.56665, 1020.0291, 1014.87085, 1012.80835, 1014.67914, 1023.3, 1020.97504, 1016.42926, 1014.0501, 1012.8499, 1012.71655, 1013.90424, 1016.2668, 1015.04584, 1012.27496, 1013.77496, 1017.4001, 1019.0876, 1021.1499, 1018.3875, 1013.2917, 1010.56665, 1013.44574, 1017.68335, 1017.17914, 1013.95825, 1012.625, 1016.98346, 1013.88745, 1018.87494, 1015.32495, 1014.24164, 1012.42505, 1022.08325, 1022.1082, 1019.20844, 1017.1001, 1017.4958, 1017.07904, 1017.27094, 1014.8626, 1014.02905, 1014.94586, 1014.27094, 1008.13745, 1011.86255, 1010.9626, 1011.34576, 1010.4751, 1015.74176, 1012.1624, 1015.38336, 1022.62915, 1028.879, 1026.2584, 1023.6916, 1021.06256, 1019.06244, 1017.5251, 1018.9958, 1019.0002, 1015.5833, 1011.93335, 1010.39594, 1009.0959, 1001.94586, 1007.2625, 1020.99176, 1024.9417, 1017.10834, 1012.0833, 1010.3792, 1012.96674, 1017.0002, 1016.8333, 1010.58765, 1006.4834, 1004.86255, 996.1375, 1003.77075, 1016.45844, 1015.2917, 1018.24164, 1018.3874, 1018.0999, 1013.89154, 1013.70844, 1014.3626, 1019.09576, 1023.7625, 1025.7625, 1028.9418, 1031.7959, 1025.7417, 1020.7917, 1017.9834, 1022.56256, 1026.6666, 1027.1125, 1027.5582, 1027.829, 1026.0917, 1028.3793, 1029.3209, 1027.3082, 1025.8251, 1028.9708, 1030.3375, 1026.5499, 1026.1791, 1027.8958, 1029.5126, 1026.5127, 1030.2457, 1029.55, 1027.2167, 1022.57916, 1018.23755, 1016.2541, 1004.72485, 1007.3501, 1001.84576, 1013.06244, 1023.80835, 1019.95, 1013.98334, 1022.4333, 1022.6584, 1026.5292, 1031.9875, 1031.225, 1026.8792, 1020.2668, 1021.47504, 1027.2751, 1025.1583, 1018.0957, 1009.0999, 1007.04584, 1016.37085, 1022.6375, 1027.8375, 1030.1, 1028.1918, 1024.9126, 1034.6042, 1038.0958, 1031.7291, 1023.59576, 1010.6208, 1024.7709, 1023.68756, 1009.8791, 1017.33344, 1030.2416, 1035.8917, 1035.3126, 1034.5833, 1032.0834, 1032.3834, 1033.3418, 1032.0918]

# температура
tmp = [6.5073285, 9.208163, 10.898579, 7.7794113, 6.1723275, 5.303162, 3.2960787, -0.833088, -2.391421, -1.9922546, -3.4414215, -4.473922, -4.597255, -3.228921, -0.08767126, -2.7897549, 5.473578, 6.173996, -1.4335047, -3.2676709, -0.24642152, 6.4802456, 8.116078, 12.011077, 10.5064945, 9.178579, 3.5131624, 3.5714953, 5.2364955, 6.166495, 6.827745, 8.609412, 7.150661, 5.885662, 6.618995, 6.0527444, 5.510662, 8.957328, 10.885661, 10.560245, 9.378996, 7.8727455, 7.569828, 6.1064954, 8.89858, 8.995245, 10.938161, 10.246913, 8.655245, 9.876078, 8.059829, 7.946079, 10.792328, 6.6252446, 5.271912, 6.3477454, 8.453578, 7.9377446, 7.595661, 6.1656613, 6.738996, 7.9798293, 8.773995, 7.5381618, 7.7194123, 6.4306626, 6.102328, 5.3460784, 8.920245, 7.9760776, 7.190661, 7.6981616, 9.663579, 10.342746, 12.148995, 11.067744, 9.631495, 10.781911, 10.641496, 11.043995, 13.701913, 13.410245, 9.002745, 6.3781624, 7.39733, 11.118579, 6.510662, 7.1256623, 11.279412, 11.478995, 11.369412, 9.654412, 9.620662, 10.098161, 13.878579, 16.145664, 17.607328, 17.98066, 18.813578, 10.995663, 8.426079, 10.717328, 13.620664, 16.597328, 18.558994, 15.278163, 7.7064953, 6.426495, 5.751079, 6.106495, 6.278162, 4.4952445, 4.758579, 5.3806624, 4.6023283, 6.116913, 8.134829, 13.171496, 11.730245, 13.601911, 16.253578, 17.794413, 13.148994, 11.380662, 13.466077, 16.106497, 13.389412, 12.792745, 13.4648285, 14.256496, 15.708161, 17.360243, 18.448578, 18.388992, 17.892744, 14.775664, 13.292745, 13.143994, 14.024411, 15.433995, 17.283579, 15.403161, 15.543579, 13.523997, 14.025661, 14.853996, 16.477327, 16.723997, 16.11358, 14.545662, 15.348163, 13.251494, 14.92233, 15.413994, 15.086495, 17.281912, 18.900663, 19.611078, 20.635248, 19.052746, 18.22733, 17.651495, 13.876912, 14.547326, 15.3744135, 16.451496, 16.468998, 17.562746, 18.204828, 21.868576, 22.826492, 20.997744, 19.067327, 15.733163, 17.423578, 21.477327, 22.462328, 21.024832, 23.790665, 24.185247, 24.185661, 18.886496, 18.25858, 16.116913, 15.454413, 17.453163, 19.28108, 17.863163, 17.121077, 19.670246, 24.450243, 22.707747, 23.230246, 20.657743, 18.69316, 19.365246, 21.922747, 20.588581, 20.465246, 21.857744, 23.99483, 24.631912, 22.561499, 21.556082, 20.763578, 20.040247, 20.490248, 22.228996, 22.800247, 20.504827, 22.13733, 24.960249, 24.721914, 22.69233, 22.473166, 21.90108, 21.122747, 21.831495, 23.348993, 21.90358, 21.865244, 22.073996, 23.873999, 24.986498, 27.056084, 25.870245, 23.705244, 23.33316, 24.26066, 23.282747, 19.33941, 19.698164, 20.820662, 19.02441, 18.484411, 20.889828, 25.02858, 18.443998, 17.615246, 19.107328, 23.156916, 24.54733, 24.368996, 24.351912, 23.869827, 22.301079, 22.86691, 21.648996, 19.348162, 18.922327, 21.33483, 18.459414, 16.824831, 15.766913, 12.867745, 10.340245, 10.156078, 11.078162, 10.661078, 11.659413, 14.417329, 16.03441, 15.78233, 15.850661, 16.382746, 16.778997, 15.075248, 15.241912, 16.391495, 16.67108, 14.132745, 11.318162, 10.215661, 14.858161, 14.119831, 12.517327, 10.837327, 10.900245, 10.154828, 10.797329, 15.53358, 14.028996, 14.451496, 14.439411, 11.223579, 10.267745, 13.965244, 14.447328, 14.062327, 13.949413, 16.052328, 14.791493, 13.241076, 12.499829, 14.139831, 15.631495, 12.778579, 13.500661, 14.0706625, 11.500661, 13.354828, 12.712746, 12.381913, 10.671078, 10.488994, 10.028579, 8.429829, 8.797328, 6.5981617, 8.8848295, 10.262328, 8.354828, 8.983578, 8.768994, 6.7044125, 6.182329, 6.6219115, 4.671495, 4.591912, 5.3673286, 3.0127459, 5.960245, 8.120246, 10.052746, 4.449412, 1.4927453, 0.14274542, 1.6406621, 8.051496, 9.223995, 9.228995, 7.997745, 7.082329, 1.1189954, 0.488162, 1.2048287, 7.283995, 6.390245, 4.3677454, 2.4606621, 8.331079, 6.7489963, 5.2123284, 4.725662, 4.166079, 3.5289955, 2.4089956, 0.5235787, 3.1448286, 3.8273287, 5.425246, 3.6219122, 7.9469123, 8.371912, 3.1177454, 4.9773293, 5.278162, 3.1252453, 3.214412, 2.4002457, 0.25816208, -0.14058793, 0.21524541, -0.34975466, -0.87683797, -0.20392124 ]

# Дати - случили се събития
dates = ["20.12.2020", "23.1.2021", "29.1.2021", "9.2.2021", "14.3.2021", "23.3.2021", 
         "12.4.2021", "27.4.2021", "1.5.2021", "15.5.2021", "9.6.2021", "25.6.2021", 
         "8.7.2021", "22.7.2021", "25.8.2021", "23.10.2021", "31.1.2022", "7.2.2022", 
         "9.3.2022", "25.5.2022", "26.8.2022", "2.11.2022", "10.11.2022", "6.2.2023", 
         "20.3.2023", "17.4.2023", "17.7.2023", "29.7.2023", "26.8.2023", "6.10.2023", 
         "27.10.2023", "27.11.2023", "1.2.2024", "8.2.2024", "4.3.2024", "20.3.2024", 
         "13.5.2024", "10.6.2024", "15.6.2024", "1.8.2024", "15.10.2024", "15.11.2024", 
         "3.1.2025", "26.1.2025"]

# Преобразуване на датите в числови стойности
parsed_dates = [datetime.strptime(d, "%d.%m.%Y") for d in dates]

# Базова дата
base_date = datetime.strptime("01.01.2020", "%d.%m.%Y")  

# Интервал от базовата дата
intervals_from_base = np.array([(d - base_date).days for d in parsed_dates])  

# Интервали между съседни дати
intervals_adjacent = np.array([(parsed_dates[i+1] - parsed_dates[i]).days for i in range(len(parsed_dates) - 1)])  

# Изчисляване на hpa и tmp по деня от годината
days_of_year = np.array([d.timetuple().tm_yday - 1 for d in parsed_dates])  # Ден от годината (индекс)
hpa_values = np.array([hpa[day] for day in days_of_year])
tmp_values = np.array([tmp[day] for day in days_of_year])

# Генериране на входни данни
X_train = np.array([[intervals_from_base[i], intervals_adjacent[i], hpa_values[i], tmp_values[i]] 
                    for i in range(len(intervals_adjacent) - 1)]).reshape(-1, 4, 1)
                    
y_train = np.array(intervals_adjacent[1:]).reshape(-1, 1)  # Интервали между съседни дати

# Модел с LSTM
model = Sequential([
    LSTM(50, activation='relu', return_sequences=True, input_shape=(4, 1)),
    Dropout(0.2),
    LSTM(30, activation='relu'),
    Dropout(0.2),
    Dense(15, activation='relu'),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse')
model.fit(X_train, y_train, epochs=300, verbose=0)

# Прогнозиране на следващия интервал
last_input = np.array([[intervals_from_base[-1], intervals_adjacent[-1], hpa_values[-1], tmp_values[-1]]]).reshape(1, 4, 1)
next_interval = model.predict(last_input)[0][0]

# Прогнозирана дата
predicted_date = parsed_dates[-1] + timedelta(days=int(next_interval))
print("Прогнозирана следваща дата:", predicted_date.strftime("%d.%m.%Y"))

### Прогнозирана следваща дата: 25.02.2025